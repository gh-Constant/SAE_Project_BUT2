name: Deploy Backend to Oracle Cloud

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - add-prisma
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    environment:
      name: backend
      url: http://api.livrable.constantsuchet.fr

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Check for nx binary
        run: ls -la node_modules/.bin/

      - name: Build backend
        run: npx nx prune backend

      - name: Package backend artifact
        run: tar -czf backend.tar.gz -C backend/dist .

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ORACLE_SSH_KEY }}" > ~/.ssh/oracle_key
          chmod 600 ~/.ssh/oracle_key
          ssh-keyscan -H ${{ secrets.ORACLE_HOST }} >> ~/.ssh/known_hosts

      - name: Remove old files on server
        run: ssh -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} "cd /var/www/backend && rm -rf *"

      - name: Upload backend to server
        run: scp -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no backend.tar.gz ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }}:/tmp/backend.tar.gz

      - name: Deploy backend on server
        run: |
          ssh -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} "
            sudo mkdir -p /var/www/backend &&
            sudo chown -R ${{ secrets.ORACLE_USER }}:${{ secrets.ORACLE_USER }} /var/www/backend &&
            tar -xzf /tmp/backend.tar.gz -C /var/www/backend &&
            cd /var/www/backend &&
            echo 'DATABASE_URL=${{ secrets.DATABASE_URL }}' > .env &&
            npm ci --omit=dev &&
            npx prisma generate
          "

      - name: Restart backend service
        run: ssh -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} "cd /var/www/backend && pm2 stop backend || true && pm2 start main.js --name backend"

      - name: Health check
        run: curl --fail http://api.livrable.constantsuchet.fr/ || exit 1

      - name: Fix permissions
        run: ssh -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} "sudo chown -R ${{ secrets.ORACLE_USER }}:${{ secrets.ORACLE_USER }} /var/www/backend && sudo chmod -R 755 /var/www/backend"

      - name: Tail logs on failure
        if: failure()
        run: ssh -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} "timeout 5 pm2 logs backend --lines 50"
