name: Deploy Backend to Oracle Cloud

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    environment:
      name: backend
      url: http://api.livrable.constantsuchet.fr
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build backend
        run: npx nx prune @sae-project-but2/backend --no-cloud

      - name: Check backend build output
        run: |
          echo "Checking backend build output..."
          ls -la backend/dist/

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ORACLE_SSH_KEY }}" > ~/.ssh/oracle_key
          chmod 600 ~/.ssh/oracle_key
          ssh-keyscan -H ${{ secrets.ORACLE_HOST }} >> ~/.ssh/known_hosts

      - name: Create backend directory on server
        run: ssh -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} "sudo mkdir -p /var/www/backend && sudo chown -R ${{ secrets.ORACLE_USER }}:${{ secrets.ORACLE_USER }} /var/www/backend"

      - name: Deploy backend to Oracle Cloud
        run: |
          echo "Uploading backend build files to Oracle Cloud..."
          scp -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no -r backend/dist/* ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }}:/var/www/backend/

      - name: Upload migrations and config to server
        run: |
          echo "Uploading migrations and config to Oracle Cloud..."
          scp -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no -r backend/migrations ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }}:/var/www/backend/
          scp -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no backend/config/config.js ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }}:/var/www/backend/
          scp -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no .sequelizerc ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }}:/var/www/backend/

      - name: Install backend dependencies on server
        run: ssh -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} "cd /var/www/backend && npm install --production"

      - name: Install sequelize-cli on server
        run: ssh -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} "cd /var/www/backend && npm install sequelize-cli"

      - name: Run database migrations
        run: ssh -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} "cd /var/www/backend && export DATABASE_URL='${{ secrets.DATABASE_URL }}' && npx sequelize-cli db:migrate"

      - name: Restart backend service
        run: ssh -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} "cd /var/www/backend && pm2 restart backend || pm2 start main.js --name backend"

      - name: Fix permissions on server
        run: ssh -i ~/.ssh/oracle_key -o StrictHostKeyChecking=no ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} "sudo chown -R ${{ secrets.ORACLE_USER }}:${{ secrets.ORACLE_USER }} /var/www/backend && sudo chmod -R 755 /var/www/backend"